{{- with .Values.elasticsearch }}
{{- with .data.service }}
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: {{ .name }}
  namespace: {{ $.Values.namespace }}
spec:
  clusterIP: None
  ports:
  {{- range .ports }}
  - name: {{.name}}
    port: {{.port}}
    targetPort: {{.targetPort}}
    protocol: {{.protocol}}
  {{- end}}
  publishNotReadyAddresses: true
  selector:
  {{- range $key, $value := .selectors }}
    {{ $key }}: {{ $value }}
  {{- end}}
  sessionAffinity: None
  type: ClusterIP
{{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .data.labels.app }}-{{ .data.labels.role }}
  namespace: {{ $.Values.namespace }}
  labels:
    {{- range $key, $value := .data.labels }}
      {{ $key }}: {{ quote $value }}
    {{- end}}
spec:
  replicas: {{ .data.replicas }}
  serviceName: {{ .data.service.name }}
  podManagementPolicy: "Parallel"
  selector:
    matchLabels:
    {{- range $key, $value := .data.labels }}
      {{ $key }}: {{ quote $value }}
    {{- end}}
  template:
    metadata:
      namespace: {{ $.Values.namespace }}
      annotations:
      {{- range $key, $value := .common.annotations }}
        {{ $key }}: {{ quote $value }}
      {{- end}}
      labels:
        {{- range $key, $value := .data.labels }}
          {{ $key }}: {{ quote $value }}
        {{- end}}
    spec:
      containers:
        - name: elasticsearch
          image: {{ .common.image }}
          resources:
            requests:
              {{- range $key, $value := .data.resources.requests }}
                {{ $key }}: {{ quote $value }}
              {{- end}}
            limits:
              {{- range $key, $value := .data.resources.limits }}
                {{ $key }}: {{ quote $value }}
              {{- end}}
          ports:
            {{- range .data.ports }}
            - name: {{.name}}
              containerPort: {{.containerPort}}
            {{- end}}
          env:
            - name: cluster.name
              value: {{ .common.cluster.name }}
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: discovery.seed_hosts
              value: {{ .master.service.name }}
            - name: xpack.license.self_generated.type
              value: basic
            - name: xpack.monitoring.collection.enabled
              value: 'true'
            {{- if .common.enhanced_discovery_logging }}
            - name: logger.org.elasticsearch.cluster.coordination.ClusterBootstrapService
              value: trace
            - name: logger.org.elasticsearch.discovery
              value: trace
            {{- end}}
            - name: network.host
              value: 0.0.0.0
            - name: ES_JAVA_OPTS
              value: {{ .data.java_opts }}
          volumeMounts:
            - name: storage
              mountPath: /var/data/elasticsearch      
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .data.storage.class }}
        resources:
          requests:
            storage: {{ .data.storage.size }}
{{- end }}